Jackie Chen:    
- Wrote parts of the report
- Created the react app
- Set up base for back-end
- Worked on drawing the E/R diagram
- Translated the E/R diagram into a database schema
- Wrote the sql commands to create the database
- Created login screen with user validation
- Added queries to create users and to find specific users
- Set up backend endpoints for various user actions
- Implemented playing music using youtube videos

Thomas Cheng:
- Found the dataset
- Wrote parts of the report
- Built the initial front-end
- Worked on drawing the E/R diagram
- Added appropriate api calls to the front-end
- Created navigation between searching for songs vs viewing a playlist
- Wrote SQL queries that return the 20 most popular songs and artists across all playlists
- Implemented api endpoint and frontend features to support new popularity query
- Add fixes that cover certain edges cases such as redesigning the create playlist page when no other playlists exist yet

Hannah Li:
- Proposed idea
- Wrote parts of the report
- Set up endpoint for initial DB query
- Worked on drawing the E/R diagram
- Deployed backend to google cloud app engine and linked with database
- Wrote sql queries that are necessary for the basic features of the application
- Implemented the initial queries in api endpoints
- Wrote the queries for searching, creating playlists, deleting playlists, adding and removing songs from playlists, and fetching playlists
- Added Redux to the application to improve management of data on the front-end
- Implemented the sub query for songs based on an artist/album/playlist in the search tab

Frank Wu:
- Wrote parts of the report
- Set up the DB on GCP and enabled teammates to modify it
- Deployed backend to google cloud app engine and linked with database
- Worked on drawing the E/R diagram
- Wrote scripts to gather the dataset from various sources
- Merged the data and stored it in a format similar to the database schema
- Refactor front end code to decouple API calling functions and improve variable naming
- Wrote SQL Query for creating playlists based with other existing playlists
- Set up backend endpoint for creating playlists with other existing playlists
- Created front-end create playlist page
- Redesigned the search to perform mini searches by category (song, artist, album, playlist) which can be expanded to reveal more search results

Jerry Yu:
- Wrote parts of the report
- Created a Github repo for collaboration
- Added env variables for DB credentials
- Deployed backend to Heroku
- Worked on drawing the E/R diagram
- Ran the sql commands to create the database
- Dumped the data into the database
- Wrote queries to create and update a liked songs playlist
- Added b tree indices to optimize search
- Implemented the ‘liked song’ feature which is represented with a heart icon
- Ensure that the heart icon information for a song is consistent everywhere in the application
